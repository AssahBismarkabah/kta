# Tenant Realm Template for kta
# This template is used to create isolated Keycloak realms for each tenant
# Variables: test_corp, Test Corporation, ^ujqLnc0%E6XYvNw
# Last trigger: Testing CI/CD pipeline trigger

realm: "test_corp"
enabled: true
displayName: "Test Corporation Services"
displayNameHtml: "<div class='kc-logo-text'><span>Test Corporation</span></div>"

# Realm Settings
registrationAllowed: false
registrationEmailAsUsername: false
rememberMe: true
verifyEmail: true
loginWithEmailAllowed: true
duplicateEmailsAllowed: false
resetPasswordAllowed: true
editUsernameAllowed: false
bruteForceProtected: true

# Token Settings
accessTokenLifespan: 300  # 5 minutes
accessTokenLifespanForImplicitFlow: 900  # 15 minutes
ssoSessionIdleTimeout: 1800  # 30 minutes
ssoSessionMaxLifespan: 36000  # 10 hours
offlineSessionIdleTimeout: 2592000  # 30 days

# Internationalization
internationalizationEnabled: true
supportedLocales:
  - "en"
  - "fr"
  - "es"
  - "de"
defaultLocale: "en"

# Client Configuration
clients:
  - clientId: "test_corp-webapp"
    name: "Test Corporation Web Application"
    description: "Main web application for Test Corporation"
    enabled: true
    publicClient: true
    standardFlowEnabled: true
    implicitFlowEnabled: false
    directAccessGrantsEnabled: false
    serviceAccountsEnabled: false
    
    # Security Configuration
    attributes:
      "pkce.code.challenge.method": "S256"
      "post.logout.redirect.uris": "+"
      "oauth2.device.authorization.grant.enabled": "false"
      "oidc.ciba.grant.enabled": "false"
    
    # URLs
    rootUrl: "https://test_corp.kta.app"
    baseUrl: "/"
    adminUrl: ""
    redirectUris:
      - "https://test_corp.kta.app/*"
      - "http://localhost:3000/*"  # For development
      - "http://localhost:3001/*"  # Alternative dev port
    webOrigins:
      - "https://test_corp.kta.app"
      - "http://localhost:3000"
      - "http://localhost:3001"
    
    # Default Client Scopes
    defaultClientScopes:
      - "basic"
      - "email"
      - "profile"
      - "roles"
      - "web-origins"
    
    # Optional Client Scopes
    optionalClientScopes:
      - "address"
      - "phone"
      - "offline_access"
    
    # Protocol Mappers
    protocolMappers:
      - name: "tenant-id-mapper"
        protocol: "openid-connect"
        protocolMapper: "oidc-hardcoded-claim-mapper"
        consentRequired: false
        config:
          "claim.name": "tenant_id"
          "claim.value": "test_corp"
          "id.token.claim": "true"
          "access.token.claim": "true"
          "userinfo.token.claim": "true"
          "jsonType.label": "String"
      
      - name: "tenant-name-mapper"
        protocol: "openid-connect"
        protocolMapper: "oidc-hardcoded-claim-mapper"
        consentRequired: false
        config:
          "claim.name": "tenant_name"
          "claim.value": "Test Corporation"
          "id.token.claim": "true"
          "access.token.claim": "true"
          "userinfo.token.claim": "true"
          "jsonType.label": "String"

  # API Client for backend services
  - clientId: "test_corp-api"
    name: "Test Corporation API Client"
    description: "Backend API client for Test Corporation"
    enabled: true
    publicClient: false
    standardFlowEnabled: false
    implicitFlowEnabled: false
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    
    # Generate a secure client secret (will be auto-generated by Keycloak)
    secret: "test_corp-api-secret-change-me"
    
    attributes:
      "oauth2.device.authorization.grant.enabled": "false"
      "oidc.ciba.grant.enabled": "false"

# Realm Roles
roles:
  realm:
    - name: "tenant_admin"
      description: "Administrator role for Test Corporation tenant"
      composite: false
      clientRole: false
    
    - name: "tenant_manager"
      description: "Manager role for Test Corporation tenant"
      composite: false
      clientRole: false
    
    - name: "tenant_user"
      description: "Standard user role for Test Corporation tenant"
      composite: false
      clientRole: false
    
    - name: "tenant_viewer"
      description: "Read-only viewer role for Test Corporation tenant"
      composite: false
      clientRole: false

# Groups for better organization
groups:
  - name: "Test Corporation Administrators"
    path: "/Test Corporation Administrators"
    attributes:
      tenant_id: ["test_corp"]
      group_type: ["admin"]
    realmRoles:
      - "tenant_admin"
  
  - name: "Test Corporation Users"
    path: "/Test Corporation Users"
    attributes:
      tenant_id: ["test_corp"]
      group_type: ["user"]
    realmRoles:
      - "tenant_user"

# Users - Temporarily commented out to test core functionality
# We'll add user creation via Keycloak Admin API after realm setup
# users:
#   - username: "admin-test_corp"
#     email: "admin@test_corp.kta.app"
#     enabled: true
#     firstName: "Tenant"
#     lastName: "Administrator"
#     realmRoles:
#       - "tenant_admin"
#     credentials:
#       - type: "password"
#         value: "^ujqLnc0%E6XYvNw"
#   
#   - username: "user-test_corp"
#     email: "user@test_corp.kta.app"
#     enabled: true
#     firstName: "Demo"
#     lastName: "User"
#     realmRoles:
#       - "tenant_user"
#     credentials:
#       - type: "password"
#         value: "DemoUser123!"

# Authentication Flow Customization
authenticationFlows:
  - alias: "test_corp-browser-flow"
    description: "Custom browser flow for Test Corporation"
    providerId: "basic-flow"
    topLevel: true
    builtIn: false
    authenticationExecutions:
      - authenticator: "auth-cookie"
        requirement: "ALTERNATIVE"
        priority: 10
        userSetupAllowed: false
        authenticatorFlow: false
      
      - authenticator: "identity-provider-redirector"
        requirement: "ALTERNATIVE"
        priority: 25
        userSetupAllowed: false
        authenticatorFlow: false
      
      - flowAlias: "test_corp-forms"
        requirement: "ALTERNATIVE"
        priority: 30
        userSetupAllowed: false
        authenticatorFlow: true

  - alias: "test_corp-forms"
    description: "Username, password, otp forms for Test Corporation"
    providerId: "basic-flow"
    topLevel: false
    builtIn: false
    authenticationExecutions:
      - authenticator: "auth-username-password-form"
        requirement: "REQUIRED"
        priority: 10
        userSetupAllowed: false
        authenticatorFlow: false

# Client Scopes (Custom scopes for this tenant)
clientScopes:
  - name: "test_corp-scope"
    description: "Custom scope for Test Corporation tenant"
    protocol: "openid-connect"
    attributes:
      "consent.screen.text": "Test Corporation specific permissions"
      "display.on.consent.screen": "true"
    protocolMappers:
      - name: "tenant-scope-mapper"
        protocol: "openid-connect"
        protocolMapper: "oidc-audience-mapper"
        consentRequired: false
        config:
          "included.client.audience": "test_corp-api"
          "id.token.claim": "false"
          "access.token.claim": "true"

# Events Configuration
eventsEnabled: true
eventsListeners:
  - "jboss-logging"
enabledEventTypes:
  - "LOGIN"
  - "LOGIN_ERROR"
  - "REGISTER"
  - "REGISTER_ERROR"
  - "LOGOUT"
  - "CODE_TO_TOKEN"
  - "CLIENT_LOGIN"
  - "REFRESH_TOKEN"
  - "UPDATE_PASSWORD"
  - "UPDATE_PROFILE"

adminEventsEnabled: true
adminEventsDetailsEnabled: true

# Password Policy
passwordPolicy: "length(8) and digits(1) and lowerCase(1) and upperCase(1) and specialChars(1) and notUsername"

# SMTP Configuration (optional - for email verification)
# smtpServer:
#   host: "smtp.test_corp.com"
#   port: "587"
#   from: "noreply@test_corp.com"
#   fromDisplayName: "Test Corporation Identity"
#   ssl: "false"
#   starttls: "true"
#   auth: "true"
#   user: "smtp-user"
#   password: "smtp-password" 